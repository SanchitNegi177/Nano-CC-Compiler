#include             | PREPROCESSOR    | INCLUDE         | 2       
<                    | OPERATOR        | LT              | 2       
stdio                | IDENTIFIER      | VAR             | 2       
.                    | PUNCTUATION     | DOT             | 2       
h                    | IDENTIFIER      | VAR             | 2       
>                    | OPERATOR        | GT              | 2       
int                  | KEYWORD         | INT             | 3       
main                 | IDENTIFIER      | VAR             | 3       
(                    | PUNCTUATION     | LPAREN          | 3       
)                    | PUNCTUATION     | RPAREN          | 3       
{                    | PUNCTUATION     | LBRACE          | 3       
int                  | KEYWORD         | INT             | 5       
l                    | IDENTIFIER      | VAR             | 5       
=                    | OPERATOR        | ASSIGN          | 5       
10                   | NUMBER          | INTEGER         | 5       
,                    | PUNCTUATION     | COMMA           | 5       
a                    | IDENTIFIER      | VAR             | 5       
=                    | OPERATOR        | ASSIGN          | 5       
0                    | NUMBER          | INTEGER         | 5       
,                    | PUNCTUATION     | COMMA           | 5       
i                    | IDENTIFIER      | VAR             | 5       
;                    | PUNCTUATION     | SEMICOLON       | 5       
for                  | KEYWORD         | FOR             | 6       
(                    | PUNCTUATION     | LPAREN          | 6       
i                    | IDENTIFIER      | VAR             | 6       
=                    | OPERATOR        | ASSIGN          | 6       
0                    | NUMBER          | INTEGER         | 6       
;                    | PUNCTUATION     | SEMICOLON       | 6       
i                    | IDENTIFIER      | VAR             | 6       
<                    | OPERATOR        | LT              | 6       
l                    | IDENTIFIER      | VAR             | 6       
;                    | PUNCTUATION     | SEMICOLON       | 6       
i                    | IDENTIFIER      | VAR             | 6       
++                   | OPERATOR        | INC             | 6       
)                    | PUNCTUATION     | RPAREN          | 6       
{                    | PUNCTUATION     | LBRACE          | 6       
printf               | IDENTIFIER      | VAR             | 7       
(                    | PUNCTUATION     | LPAREN          | 7       
"\nHello World"      | STRING          | LITERAL         | 7       
)                    | PUNCTUATION     | RPAREN          | 7       
;                    | PUNCTUATION     | SEMICOLON       | 7       
}                    | PUNCTUATION     | RBRACE          | 8       
for                  | KEYWORD         | FOR             | 9       
(                    | PUNCTUATION     | LPAREN          | 9       
a                    | IDENTIFIER      | VAR             | 9       
<                    | OPERATOR        | LT              | 9       
l                    | IDENTIFIER      | VAR             | 9       
;                    | PUNCTUATION     | SEMICOLON       | 9       
a                    | IDENTIFIER      | VAR             | 9       
++                   | OPERATOR        | INC             | 9       
)                    | PUNCTUATION     | RPAREN          | 9       
{                    | PUNCTUATION     | LBRACE          | 9       
printf               | IDENTIFIER      | VAR             | 10      
(                    | PUNCTUATION     | LPAREN          | 10      
"\nInvalid Syntax"   | STRING          | LITERAL         | 10      
)                    | PUNCTUATION     | RPAREN          | 10      
;                    | PUNCTUATION     | SEMICOLON       | 10      
}                    | PUNCTUATION     | RBRACE          | 11      
while                | KEYWORD         | WHILE           | 12      
(                    | PUNCTUATION     | LPAREN          | 12      
i                    | IDENTIFIER      | VAR             | 12      
<                    | OPERATOR        | LT              | 12      
10                   | NUMBER          | INTEGER         | 12      
)                    | PUNCTUATION     | RPAREN          | 12      
{                    | PUNCTUATION     | LBRACE          | 12      
printf               | IDENTIFIER      | VAR             | 13      
(                    | PUNCTUATION     | LPAREN          | 13      
"\nCompiler Design"  | STRING          | LITERAL         | 13      
)                    | PUNCTUATION     | RPAREN          | 13      
;                    | PUNCTUATION     | SEMICOLON       | 13      
}                    | PUNCTUATION     | RBRACE          | 14      
}                    | PUNCTUATION     | RBRACE          | 16      
